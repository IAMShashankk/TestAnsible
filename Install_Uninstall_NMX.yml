---
# Ansible playbook to run Windows Update and restart, if required
#
# http://docs.ansible.com/ansible/win_updates_module.html
# https://docs.ansible.com/ansible/win_reboot_module.html
- hosts: all
  vars:
    hostname: shasha
  tasks:
  - name: Get active catalog name
    win_reg_stat:
      path: HKLM:\SOFTWARE\Harmonic\MEM
      name: ServiceSQLServerDSN
    register: ActiveCatalog
  - name: Create NMXInstall.ini file
    win_copy:
      dest: C:\NMXInstall.ini
      content: |
        [Option]
        SiteID={{SiteID}}
        SQLServerName=localhost
        Catalog={{ActiveCatalog.value}}
        SQLServerBackupDir=C:\databasebkup
  - name: Create NMXUninstall.ini file
    win_copy:
      dest: C:\NMXUninstall.ini
      content: |
        ! QuickInstall, 0 - Proceed with uninstallation, 1 - Skip uninstallation.
        ! 1 Silent Mode True, Any other value  - False.
        [Mode]
        Silent=1
        QuickInstall=0
  - name: Delete the NMX folder - Cleanup before downloading new build
    win_file:
      path: C:\Temp\nmx
      state: absent
  - name: Download NMX build from FTP with authentication
    win_get_url:
      url: "http://hivy/artifactory/ivy-repos/harmonic/nmx/{{nmx_version}}/{{build_number}}/nmx_build_output.zip"
      dest: c:\temp\
      url_username: "{{username}}"
      url_password: "{{password}}"
  - name: Unzip the NMX build folder
    win_unzip:
      src: c:\temp\nmx_build_output.zip
      dest: C:\temp\
      rm: True
  - name: check if NMX is already installed
    win_reg_stat:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{0940EFBB-D1FC-4C6F-91E0-996D9E40B2A2}_is1
    register: NMX_Installed
  - name: Get the file name to uninstall from registry
    win_reg_stat:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{0940EFBB-D1FC-4C6F-91E0-996D9E40B2A2}_is1
      name: UninstallString
    register: uninstallStringFile
    when: NMX_Installed is defined and NMX_Installed.exists==true
  - name: Uninstall NMX via Command Prompt
    win_command: '"{{ uninstallStringFile.value | regex_replace(''^\"|\"$'', '''') }}" /SP- /SILENT /SUPPRESSMSGBOXES /Log="c:\Temp\AnsibleLogs\UninstallLog.txt"'
    args:
      chdir: C:\Program Files\Harmonic\
    when: NMX_Installed is defined and NMX_Installed.exists==true
# - name: Uninstall NMX
#    win_package:
#        path: "{{ uninstallStringFile.value | regex_replace('^\"|\"$', '') }}"
#        product_id: '{0940EFBB-D1FC-4C6F-91E0-996D9E40B2A2}_is1'
#        arguments: /SP- /SILENT /SUPPRESSMSGBOXES
#        state: absent
#    when: NMX_Installed is defined and NMX_Installed.exists==true
#  - name: Setup Autologon for starting remote session after reboot
#    win_shell: C:\Utilities\Autologon.exe /accepteula "{{ nmx_username }}" . "{{ nmx_password }}"
#    when: NMX_Installed is defined and NMX_Installed.exists==true
  - name: rebooting windows machine
    win_reboot:
      post_reboot_delay: 120
    when: NMX_Installed is defined and NMX_Installed.exists==true
  - name: Waiting for connection
    wait_for_connection:
#  - name: Reboot NMX server after uninstalling NMX
#    win_shell: Restart-Computer -Force
#    when: NMX_Installed is defined and NMX_Installed.exists==true
#  - name: Wait 2 minutes for server to reboot
#    pause:
#      seconds: 120
#    when: NMX_Installed is defined and NMX_Installed.exists==true
#  - name: Ping Host machine - wait till it restarts - timeout 10 minutes
#    win_wait_for:
#      host: "{{ ansible_host }}"
#      port: "{{ansible_port}}" #SSH Port
#      state: started
#      timeout: 600 #wait for 10 minutes to bring machine up
#  - name: Wait 2 minutes  after reboot to run the uninstall finalization scripts
#    pause:
#      seconds: 120
#    when: NMX_Installed is defined and NMX_Installed.exists==true
  - name: Check if XMS service is installed
    win_service:
      name: XServer
    register: XMSService
  - name: Stop XMS service if it is running
    win_service:
      name: XServer
      state: stopped
    when: XMSService.exists==true and XMSService.state == "running"
  - name: Find the installation file
    win_find:
      paths: C:\Temp\nmx
      patterns: ['*.exe']
      recurse: True
    register: resultFile
#  - name: Setup Autologon for starting remote session after reboot once installation is done
#    win_shell: C:\Utilities\Autologon.exe /accepteula "{{ nmx_username }}" . "{{ nmx_password }}"
  - name: Install NMX via Command Prompt
    win_command: '"{{resultFile.files[0].path}}" /SP- /SILENT /SUPPRESSMSGBOXES /Type=ClientAndServer /NDDS_DOMAINID="{{SiteID}}" /Log="c:\Temp\AnsibleLogs\InstallLog.txt"'
    register: installresult
#  - name: Install NMX
#    win_package:
#      path: "{{resultFile.files[0].path}}"
#      product_id: '{0940EFBB-D1FC-4C6F-91E0-996D9E40B2A2}_is1'
#      arguments: /SP- /SILENT /SUPPRESSMSGBOXES /NORESTART /Type=ClientAndServer /NDDS_DOMAINID="{{SiteID}}"
#      state: present
#    register: installresult
  - name: rebooting windows machine after install
    win_reboot:
      post_reboot_delay: 120
    when: installresult.rc==0
  - name: Waiting for connection
    wait_for_connection:
#  - name: Wait 2 minutes for server to reboot
#    pause:
#      seconds: 120
#  - name: Ping Host machine - wait till it restarts - timeout 10 minutes
#    win_wait_for:
#      host: "{{ ansible_host }}"
#      port: "{{ansible_port}}" #SSH Port
#      state: started
#      timeout: 600 #wait for 10 minutes to bring machine up
#    register: pingresult
#  - name: Reboot NMX server after uninstalling NMX
#    win_shell: Restart-Computer -Force
#    when: pingresult.wait_attempts > 5
#  - name: Wait 2 minutes for server to reboot
#    pause:
#      seconds: 120
  - name: Delete the NMX folder
    win_file:
      path: C:\Temp\nmx
      state: absent
