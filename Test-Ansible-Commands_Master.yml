---
- hosts: all
  vars:
    hostname: shasha
  tasks:
  - name: check if NMX is already installed
    win_reg_stat:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{0940EFBB-D1FC-4C6F-91E0-996D9E40B2A2}_is1
    register: NMX_Installed
  - name: Get the file name to uninstall from registry
    win_reg_stat:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{0940EFBB-D1FC-4C6F-91E0-996D9E40B2A2}_is1
      name: UninstallString
    register: uninstallStringFile
    when: NMX_Installed is defined and NMX_Installed.exists==true
  - debug:
      msg:'"{{ uninstallStringFile.value | regex_replace('^\"|\"$', '') }}"'
#    - name: rebooting windows machine
#      win_reboot:
#    - name: Waiting for connection
#      wait_for_connection:
#    - debug:
#      msg: "Waited for machine"
#    - name: Obtain information about a file
#      win_stat:
#        path: C:\1N.XML
#      register: file_info
#    - name: rebooting windows machine
#      win_reboot:
#    - name: Waiting for connection
#      wait_for_connection:
#    - name: Copy the file
#      win_copy:
#        src: c:\1N.XML
#        dest: C:\Temp\1N.XML
#        remote_src: yes	  
#    - name: Check if XMS is installed    
#      win_stat:
#        path: C:\Harmonic\XMS_GATEWAY\Scripts\Services\StopAllServices.bat
#      register: XMSdetails
#    - name: Prior to un-install stop the XM services
#      win_command: StopAllServices.bat C:\Harmonic\XMS_GATEWAY
#      args:
#        chdir: C:\Harmonic\XMS_GATEWAY\Scripts\Services\
#      when: XMSdetails.stat.exists == true

#    - set_fact:
#        catalogNameM: "{{catalog_url.split('/')[-1]}}"
#    - import_playbook: ActivateCatalog.yml catalogName = "{{catalogNameM}}"
#    - include: ActivateCatalog.yml catalogName = "{{catalogNameM}}"
#      remote_src: true\	  
#when: shell_result.stdout_lines[0].find("eng") == -1
#    - set_fact:
#        constructbuildnumber: "{{shell_result.stdout_lines[0].split('.')}}"
#        version: "{{constructbuildnumber[0]}}.{{constructbuildnumber[1]}}.x.{{constructbuildnumber[3]}}"
#        buildnumber: "{constructbuildnumber[0]}}.{{constructbuildnumber[1]}}.{{constructbuildnumber[2]}}.{{constructbuildnumber[3]}}.{{constructbuildnumber[4]}}{{ constructbuildnumber[5] | regex_replace('^0/', '') }}"
#      when: shell_result.stdout_lines[0].find("eng") == -1		
#    - import_tasks: Test-Ansible-Commands.yml
#      vars:
#        hostname: abc
#    - import_tasks: Test-Ansible-Commands.yml
#      vars:
#        hostname: shashank
#    - name: Download ActivateCatalog zip
#      win_get_url:
#        url: "https://NMXAutomation@bitbucket360.harmonicinc.com/projects/NMXGROUP/repos/nmx_playbooks/browse/nmx_playbooks/Install_Uninstall_NMX.yml"
#        dest: c:\temp\  
#$xml.DatabaseList.Item.Info.CreatedBy	 
#    - name: Copy the Activate Catalog file
#      win_copy:
#        src: C:\DatabaseBkup\TestAnsible.hzp
#        dest: C:\temp\TestAnsible.hzp
#        remote_src: yes
#    - name: rename the file
#      win_command: cmd.exe /C rename C:\temp\TestAnsible.hzp TestAnsible1.zip
#    - name: Unzip the Download ActivateCatalog zip
#      win_unzip:
#        src: C:\DatabaseBkup\TestAnsible1.zip
#        dest: C:\temp\
#        rm: True